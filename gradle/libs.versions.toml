[versions]
materialVersion = "1.2.1"
recyclerViewVersion = "1.1.0"
swipeRefreshLayoutVersion = "1.1.0"
constraintLayoutVersion = "2.0.0"
lifecycleVersion = "2.2.0"
glideVersion = "4.9.0"
androidAppCompatVersion = "1.2.0"
espressoCoreVersion = "3.2.0"
testRunnerVersion = "1.2.0"
testExtJunitVersion = "1.1.1"
kotlinTestVersion = "1.5.20"
kotlinxSerializationVersion = "1.1.0"
kotlinxDateTimeVersion = "0.1.1"
coroutinesVersion = "1.5.0-native-mt"
ktorClientVersion = "1.6.0"
detektVersion = "1.15.0"
mokoGraphicsVersion = "0.8.0"
mokoParcelizeVersion = "0.7.1"
mokoResourcesVersion = "0.16.1"
mokoMvvmVersion = "0.11.0"
mokoErrorsVersion = "0.4.0"
mokoNetworkVersion = "0.16.0"
mokoUnitsVersion = "0.6.1"
mokoPermissionsVersion = "0.10.1"
mokoMediaVersion = "0.9.0"
mokoFieldsVersion = "0.8.0"
mokoTestVersion = "0.4.0"
multiplatformSettingsVersion = "0.7.4"
napierVersion = "1.5.0"
testCoreVersion = "1.3.0"
robolectricVersion = "4.3"

[libraries]
appCompat = { module = "androidx.appcompat:appcompat", version.ref = "androidAppCompatVersion" }
material = { module =  "com.google.android.material:material", version.ref = "materialVersion" }
recyclerView = { module = "androidx.recyclerview:recyclerview", version.ref = "recyclerViewVersion" }
swipeRefreshLayout = { module = "androidx.swiperefreshlayout:swiperefreshlayout", version.ref = "swipeRefreshLayoutVersion" }
constraintLayout = { module = "androidx.constraintlayout:constraintlayout", version.ref = "constraintLayoutVersion" }
glide = { module = "com.github.bumptech.glide:glide", version.ref = "glideVersion" }
lifecycle = { module =  "androidx.lifecycle:lifecycle-extensions", version.ref = "lifecycleVersion" }
ktorClientOkHttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktorClientVersion" }
mokoMvvmDataBinding = { module = "dev.icerock.moko:mvvm-databinding", version.ref = "mokoMvvmVersion" }
espressoCore = { module = "androidx.test.espresso:espresso-core", version.ref = "espressoCoreVersion" }
kotlinTestJUnit = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlinTestVersion" }
testCore = { module = "androidx.test:core", version.ref = "testCoreVersion" }
robolectric = { module =  "org.robolectric:robolectric", version.ref = "robolectricVersion" }
testRunner = { module = "androidx.test:runner", version.ref = "testRunnerVersion" }
testRules = { module = "androidx.test:rules", version.ref = "testRunnerVersion" }
testExtJunit = { module = "androidx.test.ext:junit", version.ref = "testExtJunitVersion" }
kotlinSerialization = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinxSerializationVersion" }
kotlinxDateTime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinxDateTimeVersion" }
coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutinesVersion" }
ktorClient = { module = "io.ktor:ktor-client-core", version.ref = "ktorClientVersion" }
ktorClientLogging = { module = "io.ktor:ktor-client-logging", version.ref = "ktorClientVersion" }
mokoResources = { module = "dev.icerock.moko:resources", version.ref = "mokoResourcesVersion" }
mokoParcelize = { module = "dev.icerock.moko:parcelize", version.ref = "mokoParcelizeVersion" }
mokoGraphics = { module = "dev.icerock.moko:graphics", version.ref = "mokoGraphicsVersion" }
mokoMvvmCore = { module = "dev.icerock.moko:mvvm-core", version.ref = "mokoMvvmVersion" }
mokoMvvmLiveData = { module = "dev.icerock.moko:mvvm-livedata", version.ref = "mokoMvvmVersion" }
mokoMvvmState = { module = "dev.icerock.moko:mvvm-state", version.ref = "mokoMvvmVersion" }
mokoErrors = { module = "dev.icerock.moko:errors", version.ref = "mokoErrorsVersion" }
mokoNetwork = { module = "dev.icerock.moko:network", version.ref = "mokoNetworkVersion" }
mokoNetworkErrors = { module = "dev.icerock.moko:network-errors", version.ref = "mokoNetworkVersion" }
mokoPermissions = { module = "dev.icerock.moko:permissions", version.ref = "mokoPermissionsVersion" }
mokoMedia = { module = "dev.icerock.moko:media", version.ref = "mokoMediaVersion" }
mokoUnits = { module = "dev.icerock.moko:units", version.ref = "mokoUnitsVersion" }
mokoFields = { module = "dev.icerock.moko:fields", version.ref = "mokoFieldsVersion" }
multiplatformSettings = { module = "com.russhwolf:multiplatform-settings", version.ref = "multiplatformSettingsVersion" }
napier = { module = "io.github.aakira:napier", version.ref = "napierVersion" }
mokoMvvmTest = { module = "dev.icerock.moko:mvvm-test", version.ref = "mokoMvvmVersion" }
mokoTestCore = { module = "dev.icerock.moko:test-core", version.ref = "mokoTestVersion" }
mokoUnitsTest = { module = "dev.icerock.moko:units-test", version.ref = "mokoUnitsVersion" }
multiplatformSettingsTest = { module =  "com.russhwolf:multiplatform-settings-test", version.ref = "multiplatformSettingsVersion" }
ktorClientMock = { module = "io.ktor:ktor-client-mock", version.ref = "ktorClientVersion" }
